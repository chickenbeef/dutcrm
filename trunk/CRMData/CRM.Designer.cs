//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CRMModel", "Branches_Clients_FK1", "Branches", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Branch), "Branches1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRMData.Branch), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Branch_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Company), "Branches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Branch), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Clients_ClientProblemsLog_FK1", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Client), "ClientProblemsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.ClientProblemsLog), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "CPL_Notes_FK", "ClientProblemsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.ClientProblemsLog), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Note), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Employees_ClientProblemsLog_FK1", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Employee), "ClientProblemsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.ClientProblemsLog), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Escalation_ClientProblemsLog_FK1", "Escalation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Escalation), "ClientProblemsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.ClientProblemsLog), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Problems_ClientProblemsLog_FK1", "Problems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Problem), "ClientProblemsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.ClientProblemsLog), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Solutions_ClientProblemsLog_FK1", "Solutions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRMData.Solution), "ClientProblemsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.ClientProblemsLog), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Clients_EmailProblems_FK1", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Client), "EmailProblems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.EmailProblem), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Clients_Sales_FK1", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Client), "Sales", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Sale), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "EmailProblems_Images_FK1", "EmailProblems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.EmailProblem), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Image), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Employees_EmailProblems_FK1", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRMData.Employee), "EmailProblems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.EmailProblem), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Employees_Notes_FK", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Employee), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Note), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Employees_Problems_FK1", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Employee), "Problems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Problem), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Employees_Sales_FK1", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Employee), "Sales", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Sale), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Employees_Solutions_FK1", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Employee), "Solutions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Solution), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "Problems_Solutions_FK1", "Problems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Problem), "Solutions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Solution), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClientProblemsLog_Images", "ClientProblemsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRMData.ClientProblemsLog), "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.Image), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ComTemplate_Categories", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRMData.Category), "ComTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRMData.ComTemplate), true)]

#endregion

namespace CRMData
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CRMEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CRMEntities object using the connection string found in the 'CRMEntities' section of the application configuration file.
        /// </summary>
        public CRMEntities() : base("name=CRMEntities", "CRMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CRMEntities object.
        /// </summary>
        public CRMEntities(string connectionString) : base(connectionString, "CRMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CRMEntities object.
        /// </summary>
        public CRMEntities(EntityConnection connection) : base(connection, "CRMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Branch> Branches
        {
            get
            {
                if ((_Branches == null))
                {
                    _Branches = base.CreateObjectSet<Branch>("Branches");
                }
                return _Branches;
            }
        }
        private ObjectSet<Branch> _Branches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientProblemsLog> ClientProblemsLogs
        {
            get
            {
                if ((_ClientProblemsLogs == null))
                {
                    _ClientProblemsLogs = base.CreateObjectSet<ClientProblemsLog>("ClientProblemsLogs");
                }
                return _ClientProblemsLogs;
            }
        }
        private ObjectSet<ClientProblemsLog> _ClientProblemsLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ComTemplate> ComTemplates
        {
            get
            {
                if ((_ComTemplates == null))
                {
                    _ComTemplates = base.CreateObjectSet<ComTemplate>("ComTemplates");
                }
                return _ComTemplates;
            }
        }
        private ObjectSet<ComTemplate> _ComTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailProblem> EmailProblems
        {
            get
            {
                if ((_EmailProblems == null))
                {
                    _EmailProblems = base.CreateObjectSet<EmailProblem>("EmailProblems");
                }
                return _EmailProblems;
            }
        }
        private ObjectSet<EmailProblem> _EmailProblems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Escalation> Escalations
        {
            get
            {
                if ((_Escalations == null))
                {
                    _Escalations = base.CreateObjectSet<Escalation>("Escalations");
                }
                return _Escalations;
            }
        }
        private ObjectSet<Escalation> _Escalations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Problem> Problems
        {
            get
            {
                if ((_Problems == null))
                {
                    _Problems = base.CreateObjectSet<Problem>("Problems");
                }
                return _Problems;
            }
        }
        private ObjectSet<Problem> _Problems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sale> Sales
        {
            get
            {
                if ((_Sales == null))
                {
                    _Sales = base.CreateObjectSet<Sale>("Sales");
                }
                return _Sales;
            }
        }
        private ObjectSet<Sale> _Sales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Solution> Solutions
        {
            get
            {
                if ((_Solutions == null))
                {
                    _Solutions = base.CreateObjectSet<Solution>("Solutions");
                }
                return _Solutions;
            }
        }
        private ObjectSet<Solution> _Solutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vClientProblemsLog> vClientProblemsLogs
        {
            get
            {
                if ((_vClientProblemsLogs == null))
                {
                    _vClientProblemsLogs = base.CreateObjectSet<vClientProblemsLog>("vClientProblemsLogs");
                }
                return _vClientProblemsLogs;
            }
        }
        private ObjectSet<vClientProblemsLog> _vClientProblemsLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vClient> vClients
        {
            get
            {
                if ((_vClients == null))
                {
                    _vClients = base.CreateObjectSet<vClient>("vClients");
                }
                return _vClients;
            }
        }
        private ObjectSet<vClient> _vClients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vEmployee> vEmployees
        {
            get
            {
                if ((_vEmployees == null))
                {
                    _vEmployees = base.CreateObjectSet<vEmployee>("vEmployees");
                }
                return _vEmployees;
            }
        }
        private ObjectSet<vEmployee> _vEmployees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Branches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranches(Branch branch)
        {
            base.AddObject("Branches", branch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientProblemsLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientProblemsLogs(ClientProblemsLog clientProblemsLog)
        {
            base.AddObject("ClientProblemsLogs", clientProblemsLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ComTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComTemplates(ComTemplate comTemplate)
        {
            base.AddObject("ComTemplates", comTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailProblems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailProblems(EmailProblem emailProblem)
        {
            base.AddObject("EmailProblems", emailProblem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Escalations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEscalations(Escalation escalation)
        {
            base.AddObject("Escalations", escalation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Problems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProblems(Problem problem)
        {
            base.AddObject("Problems", problem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSales(Sale sale)
        {
            base.AddObject("Sales", sale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Solutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSolutions(Solution solution)
        {
            base.AddObject("Solutions", solution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vClientProblemsLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovClientProblemsLogs(vClientProblemsLog vClientProblemsLog)
        {
            base.AddObject("vClientProblemsLogs", vClientProblemsLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vClients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovClients(vClient vClient)
        {
            base.AddObject("vClients", vClient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vEmployees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovEmployees(vEmployee vEmployee)
        {
            base.AddObject("vEmployees", vEmployee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Branch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Branch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Branch object.
        /// </summary>
        /// <param name="bRH_ID">Initial value of the BRH_ID property.</param>
        /// <param name="cPY_ID">Initial value of the CPY_ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="physicalAddress1">Initial value of the PhysicalAddress1 property.</param>
        /// <param name="tel">Initial value of the Tel property.</param>
        /// <param name="fax">Initial value of the Fax property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Branch CreateBranch(global::System.Int32 bRH_ID, global::System.Int32 cPY_ID, global::System.String name, global::System.String physicalAddress1, global::System.String tel, global::System.String fax, global::System.String email, global::System.DateTime dateCreated)
        {
            Branch branch = new Branch();
            branch.BRH_ID = bRH_ID;
            branch.CPY_ID = cPY_ID;
            branch.Name = name;
            branch.PhysicalAddress1 = physicalAddress1;
            branch.Tel = tel;
            branch.Fax = fax;
            branch.Email = email;
            branch.DateCreated = dateCreated;
            return branch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BRH_ID
        {
            get
            {
                return _BRH_ID;
            }
            set
            {
                if (_BRH_ID != value)
                {
                    OnBRH_IDChanging(value);
                    ReportPropertyChanging("BRH_ID");
                    _BRH_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BRH_ID");
                    OnBRH_IDChanged();
                }
            }
        }
        private global::System.Int32 _BRH_ID;
        partial void OnBRH_IDChanging(global::System.Int32 value);
        partial void OnBRH_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CPY_ID
        {
            get
            {
                return _CPY_ID;
            }
            set
            {
                OnCPY_IDChanging(value);
                ReportPropertyChanging("CPY_ID");
                _CPY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CPY_ID");
                OnCPY_IDChanged();
            }
        }
        private global::System.Int32 _CPY_ID;
        partial void OnCPY_IDChanging(global::System.Int32 value);
        partial void OnCPY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocexAddress
        {
            get
            {
                return _DocexAddress;
            }
            set
            {
                OnDocexAddressChanging(value);
                ReportPropertyChanging("DocexAddress");
                _DocexAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocexAddress");
                OnDocexAddressChanged();
            }
        }
        private global::System.String _DocexAddress;
        partial void OnDocexAddressChanging(global::System.String value);
        partial void OnDocexAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoutingID
        {
            get
            {
                return _RoutingID;
            }
            set
            {
                OnRoutingIDChanging(value);
                ReportPropertyChanging("RoutingID");
                _RoutingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoutingID");
                OnRoutingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoutingID;
        partial void OnRoutingIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoutingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicalAddress1
        {
            get
            {
                return _PhysicalAddress1;
            }
            set
            {
                OnPhysicalAddress1Changing(value);
                ReportPropertyChanging("PhysicalAddress1");
                _PhysicalAddress1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhysicalAddress1");
                OnPhysicalAddress1Changed();
            }
        }
        private global::System.String _PhysicalAddress1;
        partial void OnPhysicalAddress1Changing(global::System.String value);
        partial void OnPhysicalAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhysicalAddress2
        {
            get
            {
                return _PhysicalAddress2;
            }
            set
            {
                OnPhysicalAddress2Changing(value);
                ReportPropertyChanging("PhysicalAddress2");
                _PhysicalAddress2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhysicalAddress2");
                OnPhysicalAddress2Changed();
            }
        }
        private global::System.String _PhysicalAddress2;
        partial void OnPhysicalAddress2Changing(global::System.String value);
        partial void OnPhysicalAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suburb
        {
            get
            {
                return _Suburb;
            }
            set
            {
                OnSuburbChanging(value);
                ReportPropertyChanging("Suburb");
                _Suburb = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suburb");
                OnSuburbChanged();
            }
        }
        private global::System.String _Suburb;
        partial void OnSuburbChanging(global::System.String value);
        partial void OnSuburbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalAddress1
        {
            get
            {
                return _PostalAddress1;
            }
            set
            {
                OnPostalAddress1Changing(value);
                ReportPropertyChanging("PostalAddress1");
                _PostalAddress1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalAddress1");
                OnPostalAddress1Changed();
            }
        }
        private global::System.String _PostalAddress1;
        partial void OnPostalAddress1Changing(global::System.String value);
        partial void OnPostalAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalAddress2
        {
            get
            {
                return _PostalAddress2;
            }
            set
            {
                OnPostalAddress2Changing(value);
                ReportPropertyChanging("PostalAddress2");
                _PostalAddress2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalAddress2");
                OnPostalAddress2Changed();
            }
        }
        private global::System.String _PostalAddress2;
        partial void OnPostalAddress2Changing(global::System.String value);
        partial void OnPostalAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tel
        {
            get
            {
                return _Tel;
            }
            set
            {
                OnTelChanging(value);
                ReportPropertyChanging("Tel");
                _Tel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tel");
                OnTelChanged();
            }
        }
        private global::System.String _Tel;
        partial void OnTelChanging(global::System.String value);
        partial void OnTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IntegrationKey
        {
            get
            {
                return _IntegrationKey;
            }
            set
            {
                OnIntegrationKeyChanging(value);
                ReportPropertyChanging("IntegrationKey");
                _IntegrationKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IntegrationKey");
                OnIntegrationKeyChanged();
            }
        }
        private global::System.String _IntegrationKey;
        partial void OnIntegrationKeyChanging(global::System.String value);
        partial void OnIntegrationKeyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Branches_Clients_FK1", "Branches1")]
        public Branch Branches1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("CRMModel.Branches_Clients_FK1", "Branches1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("CRMModel.Branches_Clients_FK1", "Branches1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> Branches1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("CRMModel.Branches_Clients_FK1", "Branches1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("CRMModel.Branches_Clients_FK1", "Branches1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Branches_Clients_FK1", "Branches")]
        public Branch Branch1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("CRMModel.Branches_Clients_FK1", "Branches").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("CRMModel.Branches_Clients_FK1", "Branches").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> Branch1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("CRMModel.Branches_Clients_FK1", "Branches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("CRMModel.Branches_Clients_FK1", "Branches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Branch_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("CRMModel.FK_Branch_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("CRMModel.FK_Branch_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("CRMModel.FK_Branch_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("CRMModel.FK_Branch_Company", "Companies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="cAT_ID">Initial value of the CAT_ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 cAT_ID, global::System.String name)
        {
            Category category = new Category();
            category.CAT_ID = cAT_ID;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CAT_ID
        {
            get
            {
                return _CAT_ID;
            }
            set
            {
                if (_CAT_ID != value)
                {
                    OnCAT_IDChanging(value);
                    ReportPropertyChanging("CAT_ID");
                    _CAT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CAT_ID");
                    OnCAT_IDChanged();
                }
            }
        }
        private global::System.Int32 _CAT_ID;
        partial void OnCAT_IDChanging(global::System.Int32 value);
        partial void OnCAT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ComTemplate_Categories", "ComTemplate")]
        public EntityCollection<ComTemplate> ComTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComTemplate>("CRMModel.FK_ComTemplate_Categories", "ComTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComTemplate>("CRMModel.FK_ComTemplate_Categories", "ComTemplate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="cLIENT_ID">Initial value of the CLIENT_ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="bRH_ID">Initial value of the BRH_ID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Client CreateClient(global::System.Int32 cLIENT_ID, global::System.String name, global::System.String surname, global::System.DateTime dateOfBirth, global::System.Int32 bRH_ID, global::System.Guid userId)
        {
            Client client = new Client();
            client.CLIENT_ID = cLIENT_ID;
            client.Name = name;
            client.Surname = surname;
            client.DateOfBirth = dateOfBirth;
            client.BRH_ID = bRH_ID;
            client.UserId = userId;
            return client;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLIENT_ID
        {
            get
            {
                return _CLIENT_ID;
            }
            set
            {
                if (_CLIENT_ID != value)
                {
                    OnCLIENT_IDChanging(value);
                    ReportPropertyChanging("CLIENT_ID");
                    _CLIENT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLIENT_ID");
                    OnCLIENT_IDChanged();
                }
            }
        }
        private global::System.Int32 _CLIENT_ID;
        partial void OnCLIENT_IDChanging(global::System.Int32 value);
        partial void OnCLIENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cell
        {
            get
            {
                return _Cell;
            }
            set
            {
                OnCellChanging(value);
                ReportPropertyChanging("Cell");
                _Cell = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cell");
                OnCellChanged();
            }
        }
        private global::System.String _Cell;
        partial void OnCellChanging(global::System.String value);
        partial void OnCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BRH_ID
        {
            get
            {
                return _BRH_ID;
            }
            set
            {
                OnBRH_IDChanging(value);
                ReportPropertyChanging("BRH_ID");
                _BRH_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BRH_ID");
                OnBRH_IDChanged();
            }
        }
        private global::System.Int32 _BRH_ID;
        partial void OnBRH_IDChanging(global::System.Int32 value);
        partial void OnBRH_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Clients_ClientProblemsLog_FK1", "ClientProblemsLog")]
        public EntityCollection<ClientProblemsLog> ClientProblemsLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientProblemsLog>("CRMModel.Clients_ClientProblemsLog_FK1", "ClientProblemsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientProblemsLog>("CRMModel.Clients_ClientProblemsLog_FK1", "ClientProblemsLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Clients_EmailProblems_FK1", "EmailProblems")]
        public EntityCollection<EmailProblem> EmailProblems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailProblem>("CRMModel.Clients_EmailProblems_FK1", "EmailProblems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailProblem>("CRMModel.Clients_EmailProblems_FK1", "EmailProblems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Clients_Sales_FK1", "Sales")]
        public EntityCollection<Sale> Sales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("CRMModel.Clients_Sales_FK1", "Sales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("CRMModel.Clients_Sales_FK1", "Sales", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClientProblemsLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientProblemsLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientProblemsLog object.
        /// </summary>
        /// <param name="cPR_ID">Initial value of the CPR_ID property.</param>
        /// <param name="solved">Initial value of the Solved property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="comTypeTel">Initial value of the ComTypeTel property.</param>
        /// <param name="cLIENT_ID">Initial value of the CLIENT_ID property.</param>
        /// <param name="pROB_ID">Initial value of the PROB_ID property.</param>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="solvedOnCreate">Initial value of the SolvedOnCreate property.</param>
        public static ClientProblemsLog CreateClientProblemsLog(global::System.Int32 cPR_ID, global::System.Boolean solved, global::System.DateTime dateCreated, global::System.Boolean comTypeTel, global::System.Int32 cLIENT_ID, global::System.Int32 pROB_ID, global::System.Int32 eMP_ID, global::System.String priority, global::System.Boolean solvedOnCreate)
        {
            ClientProblemsLog clientProblemsLog = new ClientProblemsLog();
            clientProblemsLog.CPR_ID = cPR_ID;
            clientProblemsLog.Solved = solved;
            clientProblemsLog.DateCreated = dateCreated;
            clientProblemsLog.ComTypeTel = comTypeTel;
            clientProblemsLog.CLIENT_ID = cLIENT_ID;
            clientProblemsLog.PROB_ID = pROB_ID;
            clientProblemsLog.EMP_ID = eMP_ID;
            clientProblemsLog.Priority = priority;
            clientProblemsLog.SolvedOnCreate = solvedOnCreate;
            return clientProblemsLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CPR_ID
        {
            get
            {
                return _CPR_ID;
            }
            set
            {
                if (_CPR_ID != value)
                {
                    OnCPR_IDChanging(value);
                    ReportPropertyChanging("CPR_ID");
                    _CPR_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CPR_ID");
                    OnCPR_IDChanged();
                }
            }
        }
        private global::System.Int32 _CPR_ID;
        partial void OnCPR_IDChanging(global::System.Int32 value);
        partial void OnCPR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Solved
        {
            get
            {
                return _Solved;
            }
            set
            {
                OnSolvedChanging(value);
                ReportPropertyChanging("Solved");
                _Solved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Solved");
                OnSolvedChanged();
            }
        }
        private global::System.Boolean _Solved;
        partial void OnSolvedChanging(global::System.Boolean value);
        partial void OnSolvedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSolved
        {
            get
            {
                return _DateSolved;
            }
            set
            {
                OnDateSolvedChanging(value);
                ReportPropertyChanging("DateSolved");
                _DateSolved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSolved");
                OnDateSolvedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSolved;
        partial void OnDateSolvedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSolvedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ComTypeTel
        {
            get
            {
                return _ComTypeTel;
            }
            set
            {
                OnComTypeTelChanging(value);
                ReportPropertyChanging("ComTypeTel");
                _ComTypeTel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComTypeTel");
                OnComTypeTelChanged();
            }
        }
        private global::System.Boolean _ComTypeTel;
        partial void OnComTypeTelChanging(global::System.Boolean value);
        partial void OnComTypeTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLIENT_ID
        {
            get
            {
                return _CLIENT_ID;
            }
            set
            {
                OnCLIENT_IDChanging(value);
                ReportPropertyChanging("CLIENT_ID");
                _CLIENT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLIENT_ID");
                OnCLIENT_IDChanged();
            }
        }
        private global::System.Int32 _CLIENT_ID;
        partial void OnCLIENT_IDChanging(global::System.Int32 value);
        partial void OnCLIENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PROB_ID
        {
            get
            {
                return _PROB_ID;
            }
            set
            {
                OnPROB_IDChanging(value);
                ReportPropertyChanging("PROB_ID");
                _PROB_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PROB_ID");
                OnPROB_IDChanged();
            }
        }
        private global::System.Int32 _PROB_ID;
        partial void OnPROB_IDChanging(global::System.Int32 value);
        partial void OnPROB_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                OnEMP_IDChanging(value);
                ReportPropertyChanging("EMP_ID");
                _EMP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMP_ID");
                OnEMP_IDChanged();
            }
        }
        private global::System.Int32 _EMP_ID;
        partial void OnEMP_IDChanging(global::System.Int32 value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SOL_ID
        {
            get
            {
                return _SOL_ID;
            }
            set
            {
                OnSOL_IDChanging(value);
                ReportPropertyChanging("SOL_ID");
                _SOL_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SOL_ID");
                OnSOL_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _SOL_ID;
        partial void OnSOL_IDChanging(Nullable<global::System.Int32> value);
        partial void OnSOL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SolvedOnCreate
        {
            get
            {
                return _SolvedOnCreate;
            }
            set
            {
                OnSolvedOnCreateChanging(value);
                ReportPropertyChanging("SolvedOnCreate");
                _SolvedOnCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SolvedOnCreate");
                OnSolvedOnCreateChanged();
            }
        }
        private global::System.Boolean _SolvedOnCreate;
        partial void OnSolvedOnCreateChanging(global::System.Boolean value);
        partial void OnSolvedOnCreateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Clients_ClientProblemsLog_FK1", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_ClientProblemsLog_FK1", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_ClientProblemsLog_FK1", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_ClientProblemsLog_FK1", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.Clients_ClientProblemsLog_FK1", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "CPL_Notes_FK", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("CRMModel.CPL_Notes_FK", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("CRMModel.CPL_Notes_FK", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_ClientProblemsLog_FK1", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_ClientProblemsLog_FK1", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_ClientProblemsLog_FK1", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_ClientProblemsLog_FK1", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CRMModel.Employees_ClientProblemsLog_FK1", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Escalation_ClientProblemsLog_FK1", "Escalation")]
        public Escalation Escalation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Escalation>("CRMModel.Escalation_ClientProblemsLog_FK1", "Escalation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Escalation>("CRMModel.Escalation_ClientProblemsLog_FK1", "Escalation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Escalation> EscalationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Escalation>("CRMModel.Escalation_ClientProblemsLog_FK1", "Escalation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Escalation>("CRMModel.Escalation_ClientProblemsLog_FK1", "Escalation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Problems_ClientProblemsLog_FK1", "Problems")]
        public Problem Problem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("CRMModel.Problems_ClientProblemsLog_FK1", "Problems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("CRMModel.Problems_ClientProblemsLog_FK1", "Problems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Problem> ProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("CRMModel.Problems_ClientProblemsLog_FK1", "Problems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Problem>("CRMModel.Problems_ClientProblemsLog_FK1", "Problems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Solutions_ClientProblemsLog_FK1", "Solutions")]
        public Solution Solution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Solution>("CRMModel.Solutions_ClientProblemsLog_FK1", "Solutions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Solution>("CRMModel.Solutions_ClientProblemsLog_FK1", "Solutions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Solution> SolutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Solution>("CRMModel.Solutions_ClientProblemsLog_FK1", "Solutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Solution>("CRMModel.Solutions_ClientProblemsLog_FK1", "Solutions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClientProblemsLog_Images", "Image")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("CRMModel.FK_ClientProblemsLog_Images", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("CRMModel.FK_ClientProblemsLog_Images", "Image", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="cPY_ID">Initial value of the CPY_ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="registerType">Initial value of the RegisterType property.</param>
        /// <param name="registerCompanyType">Initial value of the RegisterCompanyType property.</param>
        /// <param name="registerNo">Initial value of the RegisterNo property.</param>
        /// <param name="vATRegistered">Initial value of the VATRegistered property.</param>
        /// <param name="vATRegNo">Initial value of the VATRegNo property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Company CreateCompany(global::System.Int32 cPY_ID, global::System.String name, global::System.Int32 type, global::System.Int32 registerType, global::System.Int32 registerCompanyType, global::System.String registerNo, global::System.Boolean vATRegistered, global::System.String vATRegNo, global::System.DateTime createdDate)
        {
            Company company = new Company();
            company.CPY_ID = cPY_ID;
            company.Name = name;
            company.Type = type;
            company.RegisterType = registerType;
            company.RegisterCompanyType = registerCompanyType;
            company.RegisterNo = registerNo;
            company.VATRegistered = vATRegistered;
            company.VATRegNo = vATRegNo;
            company.CreatedDate = createdDate;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CPY_ID
        {
            get
            {
                return _CPY_ID;
            }
            set
            {
                if (_CPY_ID != value)
                {
                    OnCPY_IDChanging(value);
                    ReportPropertyChanging("CPY_ID");
                    _CPY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CPY_ID");
                    OnCPY_IDChanged();
                }
            }
        }
        private global::System.Int32 _CPY_ID;
        partial void OnCPY_IDChanging(global::System.Int32 value);
        partial void OnCPY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegisterType
        {
            get
            {
                return _RegisterType;
            }
            set
            {
                OnRegisterTypeChanging(value);
                ReportPropertyChanging("RegisterType");
                _RegisterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisterType");
                OnRegisterTypeChanged();
            }
        }
        private global::System.Int32 _RegisterType;
        partial void OnRegisterTypeChanging(global::System.Int32 value);
        partial void OnRegisterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegisterCompanyType
        {
            get
            {
                return _RegisterCompanyType;
            }
            set
            {
                OnRegisterCompanyTypeChanging(value);
                ReportPropertyChanging("RegisterCompanyType");
                _RegisterCompanyType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisterCompanyType");
                OnRegisterCompanyTypeChanged();
            }
        }
        private global::System.Int32 _RegisterCompanyType;
        partial void OnRegisterCompanyTypeChanging(global::System.Int32 value);
        partial void OnRegisterCompanyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegisterNo
        {
            get
            {
                return _RegisterNo;
            }
            set
            {
                OnRegisterNoChanging(value);
                ReportPropertyChanging("RegisterNo");
                _RegisterNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegisterNo");
                OnRegisterNoChanged();
            }
        }
        private global::System.String _RegisterNo;
        partial void OnRegisterNoChanging(global::System.String value);
        partial void OnRegisterNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuditorFirmName
        {
            get
            {
                return _AuditorFirmName;
            }
            set
            {
                OnAuditorFirmNameChanging(value);
                ReportPropertyChanging("AuditorFirmName");
                _AuditorFirmName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuditorFirmName");
                OnAuditorFirmNameChanged();
            }
        }
        private global::System.String _AuditorFirmName;
        partial void OnAuditorFirmNameChanging(global::System.String value);
        partial void OnAuditorFirmNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuditorFirmQualification
        {
            get
            {
                return _AuditorFirmQualification;
            }
            set
            {
                OnAuditorFirmQualificationChanging(value);
                ReportPropertyChanging("AuditorFirmQualification");
                _AuditorFirmQualification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuditorFirmQualification");
                OnAuditorFirmQualificationChanged();
            }
        }
        private global::System.String _AuditorFirmQualification;
        partial void OnAuditorFirmQualificationChanging(global::System.String value);
        partial void OnAuditorFirmQualificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuditorFirmAuditor
        {
            get
            {
                return _AuditorFirmAuditor;
            }
            set
            {
                OnAuditorFirmAuditorChanging(value);
                ReportPropertyChanging("AuditorFirmAuditor");
                _AuditorFirmAuditor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuditorFirmAuditor");
                OnAuditorFirmAuditorChanged();
            }
        }
        private global::System.String _AuditorFirmAuditor;
        partial void OnAuditorFirmAuditorChanging(global::System.String value);
        partial void OnAuditorFirmAuditorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VATRegistered
        {
            get
            {
                return _VATRegistered;
            }
            set
            {
                OnVATRegisteredChanging(value);
                ReportPropertyChanging("VATRegistered");
                _VATRegistered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VATRegistered");
                OnVATRegisteredChanged();
            }
        }
        private global::System.Boolean _VATRegistered;
        partial void OnVATRegisteredChanging(global::System.Boolean value);
        partial void OnVATRegisteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VATRegNo
        {
            get
            {
                return _VATRegNo;
            }
            set
            {
                OnVATRegNoChanging(value);
                ReportPropertyChanging("VATRegNo");
                _VATRegNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VATRegNo");
                OnVATRegNoChanged();
            }
        }
        private global::System.String _VATRegNo;
        partial void OnVATRegNoChanging(global::System.String value);
        partial void OnVATRegNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Branch_Company", "Branches")]
        public EntityCollection<Branch> Branches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Branch>("CRMModel.FK_Branch_Company", "Branches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Branch>("CRMModel.FK_Branch_Company", "Branches", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ComTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ComTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComTemplate object.
        /// </summary>
        /// <param name="cT_ID">Initial value of the CT_ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="paragraph">Initial value of the Paragraph property.</param>
        /// <param name="cAT_ID">Initial value of the CAT_ID property.</param>
        public static ComTemplate CreateComTemplate(global::System.Int16 cT_ID, global::System.String name, global::System.String paragraph, global::System.Int32 cAT_ID)
        {
            ComTemplate comTemplate = new ComTemplate();
            comTemplate.CT_ID = cT_ID;
            comTemplate.Name = name;
            comTemplate.Paragraph = paragraph;
            comTemplate.CAT_ID = cAT_ID;
            return comTemplate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CT_ID
        {
            get
            {
                return _CT_ID;
            }
            set
            {
                if (_CT_ID != value)
                {
                    OnCT_IDChanging(value);
                    ReportPropertyChanging("CT_ID");
                    _CT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CT_ID");
                    OnCT_IDChanged();
                }
            }
        }
        private global::System.Int16 _CT_ID;
        partial void OnCT_IDChanging(global::System.Int16 value);
        partial void OnCT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Paragraph
        {
            get
            {
                return _Paragraph;
            }
            set
            {
                OnParagraphChanging(value);
                ReportPropertyChanging("Paragraph");
                _Paragraph = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Paragraph");
                OnParagraphChanged();
            }
        }
        private global::System.String _Paragraph;
        partial void OnParagraphChanging(global::System.String value);
        partial void OnParagraphChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CAT_ID
        {
            get
            {
                return _CAT_ID;
            }
            set
            {
                OnCAT_IDChanging(value);
                ReportPropertyChanging("CAT_ID");
                _CAT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CAT_ID");
                OnCAT_IDChanged();
            }
        }
        private global::System.Int32 _CAT_ID;
        partial void OnCAT_IDChanging(global::System.Int32 value);
        partial void OnCAT_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ComTemplate_Categories", "Category")]
        public Category Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CRMModel.FK_ComTemplate_Categories", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CRMModel.FK_ComTemplate_Categories", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CRMModel.FK_ComTemplate_Categories", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("CRMModel.FK_ComTemplate_Categories", "Category", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="EmailProblem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailProblem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailProblem object.
        /// </summary>
        /// <param name="eP_ID">Initial value of the EP_ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="attended">Initial value of the Attended property.</param>
        /// <param name="cLIENT_ID">Initial value of the CLIENT_ID property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        public static EmailProblem CreateEmailProblem(global::System.Int32 eP_ID, global::System.String description, global::System.DateTime dateCreated, global::System.Boolean attended, global::System.Int32 cLIENT_ID, global::System.String from, global::System.String subject)
        {
            EmailProblem emailProblem = new EmailProblem();
            emailProblem.EP_ID = eP_ID;
            emailProblem.Description = description;
            emailProblem.DateCreated = dateCreated;
            emailProblem.Attended = attended;
            emailProblem.CLIENT_ID = cLIENT_ID;
            emailProblem.From = from;
            emailProblem.Subject = subject;
            return emailProblem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EP_ID
        {
            get
            {
                return _EP_ID;
            }
            set
            {
                if (_EP_ID != value)
                {
                    OnEP_IDChanging(value);
                    ReportPropertyChanging("EP_ID");
                    _EP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EP_ID");
                    OnEP_IDChanged();
                }
            }
        }
        private global::System.Int32 _EP_ID;
        partial void OnEP_IDChanging(global::System.Int32 value);
        partial void OnEP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Attended
        {
            get
            {
                return _Attended;
            }
            set
            {
                OnAttendedChanging(value);
                ReportPropertyChanging("Attended");
                _Attended = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attended");
                OnAttendedChanged();
            }
        }
        private global::System.Boolean _Attended;
        partial void OnAttendedChanging(global::System.Boolean value);
        partial void OnAttendedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLIENT_ID
        {
            get
            {
                return _CLIENT_ID;
            }
            set
            {
                OnCLIENT_IDChanging(value);
                ReportPropertyChanging("CLIENT_ID");
                _CLIENT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLIENT_ID");
                OnCLIENT_IDChanged();
            }
        }
        private global::System.Int32 _CLIENT_ID;
        partial void OnCLIENT_IDChanging(global::System.Int32 value);
        partial void OnCLIENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                OnEMP_IDChanging(value);
                ReportPropertyChanging("EMP_ID");
                _EMP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMP_ID");
                OnEMP_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _EMP_ID;
        partial void OnEMP_IDChanging(Nullable<global::System.Int32> value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mail_ID
        {
            get
            {
                return _Mail_ID;
            }
            set
            {
                OnMail_IDChanging(value);
                ReportPropertyChanging("Mail_ID");
                _Mail_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mail_ID");
                OnMail_IDChanged();
            }
        }
        private global::System.String _Mail_ID;
        partial void OnMail_IDChanging(global::System.String value);
        partial void OnMail_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.String _From;
        partial void OnFromChanging(global::System.String value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Clients_EmailProblems_FK1", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_EmailProblems_FK1", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_EmailProblems_FK1", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_EmailProblems_FK1", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.Clients_EmailProblems_FK1", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "EmailProblems_Images_FK1", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("CRMModel.EmailProblems_Images_FK1", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("CRMModel.EmailProblems_Images_FK1", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_EmailProblems_FK1", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_EmailProblems_FK1", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_EmailProblems_FK1", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_EmailProblems_FK1", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CRMModel.Employees_EmailProblems_FK1", "Employees", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Employee CreateEmployee(global::System.Int32 eMP_ID, global::System.String name, global::System.String surname, global::System.DateTime dateCreated, global::System.Guid userId)
        {
            Employee employee = new Employee();
            employee.EMP_ID = eMP_ID;
            employee.Name = name;
            employee.Surname = surname;
            employee.DateCreated = dateCreated;
            employee.UserId = userId;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                if (_EMP_ID != value)
                {
                    OnEMP_IDChanging(value);
                    ReportPropertyChanging("EMP_ID");
                    _EMP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EMP_ID");
                    OnEMP_IDChanged();
                }
            }
        }
        private global::System.Int32 _EMP_ID;
        partial void OnEMP_IDChanging(global::System.Int32 value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cell
        {
            get
            {
                return _Cell;
            }
            set
            {
                OnCellChanging(value);
                ReportPropertyChanging("Cell");
                _Cell = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cell");
                OnCellChanged();
            }
        }
        private global::System.String _Cell;
        partial void OnCellChanging(global::System.String value);
        partial void OnCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_ClientProblemsLog_FK1", "ClientProblemsLog")]
        public EntityCollection<ClientProblemsLog> ClientProblemsLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientProblemsLog>("CRMModel.Employees_ClientProblemsLog_FK1", "ClientProblemsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientProblemsLog>("CRMModel.Employees_ClientProblemsLog_FK1", "ClientProblemsLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_EmailProblems_FK1", "EmailProblems")]
        public EntityCollection<EmailProblem> EmailProblems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailProblem>("CRMModel.Employees_EmailProblems_FK1", "EmailProblems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailProblem>("CRMModel.Employees_EmailProblems_FK1", "EmailProblems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_Notes_FK", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("CRMModel.Employees_Notes_FK", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("CRMModel.Employees_Notes_FK", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_Problems_FK1", "Problems")]
        public EntityCollection<Problem> Problems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Problem>("CRMModel.Employees_Problems_FK1", "Problems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Problem>("CRMModel.Employees_Problems_FK1", "Problems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_Sales_FK1", "Sales")]
        public EntityCollection<Sale> Sales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("CRMModel.Employees_Sales_FK1", "Sales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("CRMModel.Employees_Sales_FK1", "Sales", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_Solutions_FK1", "Solutions")]
        public EntityCollection<Solution> Solutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Solution>("CRMModel.Employees_Solutions_FK1", "Solutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Solution>("CRMModel.Employees_Solutions_FK1", "Solutions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Escalation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Escalation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Escalation object.
        /// </summary>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        public static Escalation CreateEscalation(global::System.String priority, global::System.Int16 duration)
        {
            Escalation escalation = new Escalation();
            escalation.Priority = priority;
            escalation.Duration = duration;
            return escalation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    OnPriorityChanging(value);
                    ReportPropertyChanging("Priority");
                    _Priority = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Priority");
                    OnPriorityChanged();
                }
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int16 _Duration;
        partial void OnDurationChanging(global::System.Int16 value);
        partial void OnDurationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Escalation_ClientProblemsLog_FK1", "ClientProblemsLog")]
        public EntityCollection<ClientProblemsLog> ClientProblemsLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientProblemsLog>("CRMModel.Escalation_ClientProblemsLog_FK1", "ClientProblemsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientProblemsLog>("CRMModel.Escalation_ClientProblemsLog_FK1", "ClientProblemsLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="iMG_ID">Initial value of the IMG_ID property.</param>
        /// <param name="imageFile">Initial value of the ImageFile property.</param>
        /// <param name="eP_ID">Initial value of the EP_ID property.</param>
        public static Image CreateImage(global::System.Int32 iMG_ID, global::System.Byte[] imageFile, global::System.Int32 eP_ID)
        {
            Image image = new Image();
            image.IMG_ID = iMG_ID;
            image.ImageFile = imageFile;
            image.EP_ID = eP_ID;
            return image;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IMG_ID
        {
            get
            {
                return _IMG_ID;
            }
            set
            {
                if (_IMG_ID != value)
                {
                    OnIMG_IDChanging(value);
                    ReportPropertyChanging("IMG_ID");
                    _IMG_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IMG_ID");
                    OnIMG_IDChanged();
                }
            }
        }
        private global::System.Int32 _IMG_ID;
        partial void OnIMG_IDChanging(global::System.Int32 value);
        partial void OnIMG_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageFile
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageFile);
            }
            set
            {
                OnImageFileChanging(value);
                ReportPropertyChanging("ImageFile");
                _ImageFile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageFile");
                OnImageFileChanged();
            }
        }
        private global::System.Byte[] _ImageFile;
        partial void OnImageFileChanging(global::System.Byte[] value);
        partial void OnImageFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EP_ID
        {
            get
            {
                return _EP_ID;
            }
            set
            {
                OnEP_IDChanging(value);
                ReportPropertyChanging("EP_ID");
                _EP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EP_ID");
                OnEP_IDChanged();
            }
        }
        private global::System.Int32 _EP_ID;
        partial void OnEP_IDChanging(global::System.Int32 value);
        partial void OnEP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CPR_ID
        {
            get
            {
                return _CPR_ID;
            }
            set
            {
                OnCPR_IDChanging(value);
                ReportPropertyChanging("CPR_ID");
                _CPR_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CPR_ID");
                OnCPR_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _CPR_ID;
        partial void OnCPR_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCPR_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "EmailProblems_Images_FK1", "EmailProblems")]
        public EmailProblem EmailProblem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailProblem>("CRMModel.EmailProblems_Images_FK1", "EmailProblems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailProblem>("CRMModel.EmailProblems_Images_FK1", "EmailProblems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmailProblem> EmailProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailProblem>("CRMModel.EmailProblems_Images_FK1", "EmailProblems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmailProblem>("CRMModel.EmailProblems_Images_FK1", "EmailProblems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClientProblemsLog_Images", "ClientProblemsLog")]
        public ClientProblemsLog ClientProblemsLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientProblemsLog>("CRMModel.FK_ClientProblemsLog_Images", "ClientProblemsLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientProblemsLog>("CRMModel.FK_ClientProblemsLog_Images", "ClientProblemsLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientProblemsLog> ClientProblemsLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientProblemsLog>("CRMModel.FK_ClientProblemsLog_Images", "ClientProblemsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientProblemsLog>("CRMModel.FK_ClientProblemsLog_Images", "ClientProblemsLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="nOTE_ID">Initial value of the NOTE_ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="cPR_ID">Initial value of the CPR_ID property.</param>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        public static Note CreateNote(global::System.Int32 nOTE_ID, global::System.String description, global::System.DateTime dateCreated, global::System.Int32 cPR_ID, global::System.Int32 eMP_ID)
        {
            Note note = new Note();
            note.NOTE_ID = nOTE_ID;
            note.Description = description;
            note.DateCreated = dateCreated;
            note.CPR_ID = cPR_ID;
            note.EMP_ID = eMP_ID;
            return note;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NOTE_ID
        {
            get
            {
                return _NOTE_ID;
            }
            set
            {
                if (_NOTE_ID != value)
                {
                    OnNOTE_IDChanging(value);
                    ReportPropertyChanging("NOTE_ID");
                    _NOTE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NOTE_ID");
                    OnNOTE_IDChanged();
                }
            }
        }
        private global::System.Int32 _NOTE_ID;
        partial void OnNOTE_IDChanging(global::System.Int32 value);
        partial void OnNOTE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CPR_ID
        {
            get
            {
                return _CPR_ID;
            }
            set
            {
                OnCPR_IDChanging(value);
                ReportPropertyChanging("CPR_ID");
                _CPR_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CPR_ID");
                OnCPR_IDChanged();
            }
        }
        private global::System.Int32 _CPR_ID;
        partial void OnCPR_IDChanging(global::System.Int32 value);
        partial void OnCPR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                OnEMP_IDChanging(value);
                ReportPropertyChanging("EMP_ID");
                _EMP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMP_ID");
                OnEMP_IDChanged();
            }
        }
        private global::System.Int32 _EMP_ID;
        partial void OnEMP_IDChanging(global::System.Int32 value);
        partial void OnEMP_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "CPL_Notes_FK", "ClientProblemsLog")]
        public ClientProblemsLog ClientProblemsLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientProblemsLog>("CRMModel.CPL_Notes_FK", "ClientProblemsLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientProblemsLog>("CRMModel.CPL_Notes_FK", "ClientProblemsLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientProblemsLog> ClientProblemsLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientProblemsLog>("CRMModel.CPL_Notes_FK", "ClientProblemsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientProblemsLog>("CRMModel.CPL_Notes_FK", "ClientProblemsLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_Notes_FK", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Notes_FK", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Notes_FK", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Notes_FK", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CRMModel.Employees_Notes_FK", "Employees", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Problem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Problem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Problem object.
        /// </summary>
        /// <param name="pROB_ID">Initial value of the PROB_ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        public static Problem CreateProblem(global::System.Int32 pROB_ID, global::System.String description, global::System.DateTime dateCreated, global::System.Int32 eMP_ID)
        {
            Problem problem = new Problem();
            problem.PROB_ID = pROB_ID;
            problem.Description = description;
            problem.DateCreated = dateCreated;
            problem.EMP_ID = eMP_ID;
            return problem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PROB_ID
        {
            get
            {
                return _PROB_ID;
            }
            set
            {
                if (_PROB_ID != value)
                {
                    OnPROB_IDChanging(value);
                    ReportPropertyChanging("PROB_ID");
                    _PROB_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PROB_ID");
                    OnPROB_IDChanged();
                }
            }
        }
        private global::System.Int32 _PROB_ID;
        partial void OnPROB_IDChanging(global::System.Int32 value);
        partial void OnPROB_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                OnEMP_IDChanging(value);
                ReportPropertyChanging("EMP_ID");
                _EMP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMP_ID");
                OnEMP_IDChanged();
            }
        }
        private global::System.Int32 _EMP_ID;
        partial void OnEMP_IDChanging(global::System.Int32 value);
        partial void OnEMP_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Problems_ClientProblemsLog_FK1", "ClientProblemsLog")]
        public EntityCollection<ClientProblemsLog> ClientProblemsLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientProblemsLog>("CRMModel.Problems_ClientProblemsLog_FK1", "ClientProblemsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientProblemsLog>("CRMModel.Problems_ClientProblemsLog_FK1", "ClientProblemsLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_Problems_FK1", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Problems_FK1", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Problems_FK1", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Problems_FK1", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CRMModel.Employees_Problems_FK1", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Problems_Solutions_FK1", "Solutions")]
        public EntityCollection<Solution> Solutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Solution>("CRMModel.Problems_Solutions_FK1", "Solutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Solution>("CRMModel.Problems_Solutions_FK1", "Solutions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Sale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sale object.
        /// </summary>
        /// <param name="sALE_ID">Initial value of the SALE_ID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="cLIENT_ID">Initial value of the CLIENT_ID property.</param>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        public static Sale CreateSale(global::System.Int32 sALE_ID, global::System.DateTime dateCreated, global::System.Int32 cLIENT_ID, global::System.Int32 eMP_ID)
        {
            Sale sale = new Sale();
            sale.SALE_ID = sALE_ID;
            sale.DateCreated = dateCreated;
            sale.CLIENT_ID = cLIENT_ID;
            sale.EMP_ID = eMP_ID;
            return sale;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SALE_ID
        {
            get
            {
                return _SALE_ID;
            }
            set
            {
                if (_SALE_ID != value)
                {
                    OnSALE_IDChanging(value);
                    ReportPropertyChanging("SALE_ID");
                    _SALE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SALE_ID");
                    OnSALE_IDChanged();
                }
            }
        }
        private global::System.Int32 _SALE_ID;
        partial void OnSALE_IDChanging(global::System.Int32 value);
        partial void OnSALE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLIENT_ID
        {
            get
            {
                return _CLIENT_ID;
            }
            set
            {
                OnCLIENT_IDChanging(value);
                ReportPropertyChanging("CLIENT_ID");
                _CLIENT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLIENT_ID");
                OnCLIENT_IDChanged();
            }
        }
        private global::System.Int32 _CLIENT_ID;
        partial void OnCLIENT_IDChanging(global::System.Int32 value);
        partial void OnCLIENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                OnEMP_IDChanging(value);
                ReportPropertyChanging("EMP_ID");
                _EMP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMP_ID");
                OnEMP_IDChanged();
            }
        }
        private global::System.Int32 _EMP_ID;
        partial void OnEMP_IDChanging(global::System.Int32 value);
        partial void OnEMP_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Clients_Sales_FK1", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_Sales_FK1", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_Sales_FK1", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.Clients_Sales_FK1", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.Clients_Sales_FK1", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_Sales_FK1", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Sales_FK1", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Sales_FK1", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Sales_FK1", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CRMModel.Employees_Sales_FK1", "Employees", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Solution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Solution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Solution object.
        /// </summary>
        /// <param name="sOL_ID">Initial value of the SOL_ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        /// <param name="pROB_ID">Initial value of the PROB_ID property.</param>
        public static Solution CreateSolution(global::System.Int32 sOL_ID, global::System.String description, global::System.DateTime dateCreated, global::System.Int32 eMP_ID, global::System.Int32 pROB_ID)
        {
            Solution solution = new Solution();
            solution.SOL_ID = sOL_ID;
            solution.Description = description;
            solution.DateCreated = dateCreated;
            solution.EMP_ID = eMP_ID;
            solution.PROB_ID = pROB_ID;
            return solution;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SOL_ID
        {
            get
            {
                return _SOL_ID;
            }
            set
            {
                if (_SOL_ID != value)
                {
                    OnSOL_IDChanging(value);
                    ReportPropertyChanging("SOL_ID");
                    _SOL_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SOL_ID");
                    OnSOL_IDChanged();
                }
            }
        }
        private global::System.Int32 _SOL_ID;
        partial void OnSOL_IDChanging(global::System.Int32 value);
        partial void OnSOL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                OnEMP_IDChanging(value);
                ReportPropertyChanging("EMP_ID");
                _EMP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EMP_ID");
                OnEMP_IDChanged();
            }
        }
        private global::System.Int32 _EMP_ID;
        partial void OnEMP_IDChanging(global::System.Int32 value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PROB_ID
        {
            get
            {
                return _PROB_ID;
            }
            set
            {
                OnPROB_IDChanging(value);
                ReportPropertyChanging("PROB_ID");
                _PROB_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PROB_ID");
                OnPROB_IDChanged();
            }
        }
        private global::System.Int32 _PROB_ID;
        partial void OnPROB_IDChanging(global::System.Int32 value);
        partial void OnPROB_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Solutions_ClientProblemsLog_FK1", "ClientProblemsLog")]
        public EntityCollection<ClientProblemsLog> ClientProblemsLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientProblemsLog>("CRMModel.Solutions_ClientProblemsLog_FK1", "ClientProblemsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientProblemsLog>("CRMModel.Solutions_ClientProblemsLog_FK1", "ClientProblemsLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Employees_Solutions_FK1", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Solutions_FK1", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Solutions_FK1", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CRMModel.Employees_Solutions_FK1", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CRMModel.Employees_Solutions_FK1", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "Problems_Solutions_FK1", "Problems")]
        public Problem Problem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("CRMModel.Problems_Solutions_FK1", "Problems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("CRMModel.Problems_Solutions_FK1", "Problems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Problem> ProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("CRMModel.Problems_Solutions_FK1", "Problems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Problem>("CRMModel.Problems_Solutions_FK1", "Problems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vClient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vClient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vClient object.
        /// </summary>
        /// <param name="cLIENT_ID">Initial value of the CLIENT_ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="bRH_ID">Initial value of the BRH_ID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static vClient CreatevClient(global::System.Int32 cLIENT_ID, global::System.String name, global::System.String surname, global::System.DateTime dateOfBirth, global::System.Int32 bRH_ID, global::System.Guid userId, global::System.String userName)
        {
            vClient vClient = new vClient();
            vClient.CLIENT_ID = cLIENT_ID;
            vClient.Name = name;
            vClient.Surname = surname;
            vClient.DateOfBirth = dateOfBirth;
            vClient.BRH_ID = bRH_ID;
            vClient.UserId = userId;
            vClient.UserName = userName;
            return vClient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLIENT_ID
        {
            get
            {
                return _CLIENT_ID;
            }
            set
            {
                if (_CLIENT_ID != value)
                {
                    OnCLIENT_IDChanging(value);
                    ReportPropertyChanging("CLIENT_ID");
                    _CLIENT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLIENT_ID");
                    OnCLIENT_IDChanged();
                }
            }
        }
        private global::System.Int32 _CLIENT_ID;
        partial void OnCLIENT_IDChanging(global::System.Int32 value);
        partial void OnCLIENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                if (_Surname != value)
                {
                    OnSurnameChanging(value);
                    ReportPropertyChanging("Surname");
                    _Surname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Surname");
                    OnSurnameChanged();
                }
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                if (_DateOfBirth != value)
                {
                    OnDateOfBirthChanging(value);
                    ReportPropertyChanging("DateOfBirth");
                    _DateOfBirth = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateOfBirth");
                    OnDateOfBirthChanged();
                }
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cell
        {
            get
            {
                return _Cell;
            }
            set
            {
                OnCellChanging(value);
                ReportPropertyChanging("Cell");
                _Cell = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cell");
                OnCellChanged();
            }
        }
        private global::System.String _Cell;
        partial void OnCellChanging(global::System.String value);
        partial void OnCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CLEINT_DateModified
        {
            get
            {
                return _CLEINT_DateModified;
            }
            set
            {
                OnCLEINT_DateModifiedChanging(value);
                ReportPropertyChanging("CLEINT_DateModified");
                _CLEINT_DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLEINT_DateModified");
                OnCLEINT_DateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _CLEINT_DateModified;
        partial void OnCLEINT_DateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnCLEINT_DateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BRH_ID
        {
            get
            {
                return _BRH_ID;
            }
            set
            {
                if (_BRH_ID != value)
                {
                    OnBRH_IDChanging(value);
                    ReportPropertyChanging("BRH_ID");
                    _BRH_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BRH_ID");
                    OnBRH_IDChanged();
                }
            }
        }
        private global::System.Int32 _BRH_ID;
        partial void OnBRH_IDChanging(global::System.Int32 value);
        partial void OnBRH_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vClientProblemsLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vClientProblemsLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vClientProblemsLog object.
        /// </summary>
        /// <param name="cPR_ID">Initial value of the CPR_ID property.</param>
        /// <param name="solved">Initial value of the Solved property.</param>
        /// <param name="cLIENT_ID">Initial value of the CLIENT_ID property.</param>
        /// <param name="clientName">Initial value of the ClientName property.</param>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        /// <param name="employeeName">Initial value of the EmployeeName property.</param>
        /// <param name="pROB_ID">Initial value of the PROB_ID property.</param>
        /// <param name="problemDescription">Initial value of the ProblemDescription property.</param>
        /// <param name="sOL_ID">Initial value of the SOL_ID property.</param>
        /// <param name="solutionDescription">Initial value of the SolutionDescription property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="solvedOnCreate">Initial value of the SolvedOnCreate property.</param>
        /// <param name="employeeSurname">Initial value of the EmployeeSurname property.</param>
        /// <param name="clientSurname">Initial value of the ClientSurname property.</param>
        /// <param name="clientUsername">Initial value of the ClientUsername property.</param>
        public static vClientProblemsLog CreatevClientProblemsLog(global::System.Int32 cPR_ID, global::System.Boolean solved, global::System.Int32 cLIENT_ID, global::System.String clientName, global::System.Int32 eMP_ID, global::System.String employeeName, global::System.Int32 pROB_ID, global::System.String problemDescription, global::System.Int32 sOL_ID, global::System.String solutionDescription, global::System.String priority, global::System.Boolean solvedOnCreate, global::System.String employeeSurname, global::System.String clientSurname, global::System.String clientUsername)
        {
            vClientProblemsLog vClientProblemsLog = new vClientProblemsLog();
            vClientProblemsLog.CPR_ID = cPR_ID;
            vClientProblemsLog.Solved = solved;
            vClientProblemsLog.CLIENT_ID = cLIENT_ID;
            vClientProblemsLog.ClientName = clientName;
            vClientProblemsLog.EMP_ID = eMP_ID;
            vClientProblemsLog.EmployeeName = employeeName;
            vClientProblemsLog.PROB_ID = pROB_ID;
            vClientProblemsLog.ProblemDescription = problemDescription;
            vClientProblemsLog.SOL_ID = sOL_ID;
            vClientProblemsLog.SolutionDescription = solutionDescription;
            vClientProblemsLog.Priority = priority;
            vClientProblemsLog.SolvedOnCreate = solvedOnCreate;
            vClientProblemsLog.EmployeeSurname = employeeSurname;
            vClientProblemsLog.ClientSurname = clientSurname;
            vClientProblemsLog.ClientUsername = clientUsername;
            return vClientProblemsLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CPR_ID
        {
            get
            {
                return _CPR_ID;
            }
            set
            {
                if (_CPR_ID != value)
                {
                    OnCPR_IDChanging(value);
                    ReportPropertyChanging("CPR_ID");
                    _CPR_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CPR_ID");
                    OnCPR_IDChanged();
                }
            }
        }
        private global::System.Int32 _CPR_ID;
        partial void OnCPR_IDChanging(global::System.Int32 value);
        partial void OnCPR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Solved
        {
            get
            {
                return _Solved;
            }
            set
            {
                if (_Solved != value)
                {
                    OnSolvedChanging(value);
                    ReportPropertyChanging("Solved");
                    _Solved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Solved");
                    OnSolvedChanged();
                }
            }
        }
        private global::System.Boolean _Solved;
        partial void OnSolvedChanging(global::System.Boolean value);
        partial void OnSolvedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSolved
        {
            get
            {
                return _DateSolved;
            }
            set
            {
                OnDateSolvedChanging(value);
                ReportPropertyChanging("DateSolved");
                _DateSolved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSolved");
                OnDateSolvedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSolved;
        partial void OnDateSolvedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSolvedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ComTypeTel
        {
            get
            {
                return _ComTypeTel;
            }
            set
            {
                OnComTypeTelChanging(value);
                ReportPropertyChanging("ComTypeTel");
                _ComTypeTel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComTypeTel");
                OnComTypeTelChanged();
            }
        }
        private Nullable<global::System.Boolean> _ComTypeTel;
        partial void OnComTypeTelChanging(Nullable<global::System.Boolean> value);
        partial void OnComTypeTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLIENT_ID
        {
            get
            {
                return _CLIENT_ID;
            }
            set
            {
                if (_CLIENT_ID != value)
                {
                    OnCLIENT_IDChanging(value);
                    ReportPropertyChanging("CLIENT_ID");
                    _CLIENT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLIENT_ID");
                    OnCLIENT_IDChanged();
                }
            }
        }
        private global::System.Int32 _CLIENT_ID;
        partial void OnCLIENT_IDChanging(global::System.Int32 value);
        partial void OnCLIENT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                if (_ClientName != value)
                {
                    OnClientNameChanging(value);
                    ReportPropertyChanging("ClientName");
                    _ClientName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClientName");
                    OnClientNameChanged();
                }
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                if (_EMP_ID != value)
                {
                    OnEMP_IDChanging(value);
                    ReportPropertyChanging("EMP_ID");
                    _EMP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EMP_ID");
                    OnEMP_IDChanged();
                }
            }
        }
        private global::System.Int32 _EMP_ID;
        partial void OnEMP_IDChanging(global::System.Int32 value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeName
        {
            get
            {
                return _EmployeeName;
            }
            set
            {
                if (_EmployeeName != value)
                {
                    OnEmployeeNameChanging(value);
                    ReportPropertyChanging("EmployeeName");
                    _EmployeeName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmployeeName");
                    OnEmployeeNameChanged();
                }
            }
        }
        private global::System.String _EmployeeName;
        partial void OnEmployeeNameChanging(global::System.String value);
        partial void OnEmployeeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PROB_ID
        {
            get
            {
                return _PROB_ID;
            }
            set
            {
                if (_PROB_ID != value)
                {
                    OnPROB_IDChanging(value);
                    ReportPropertyChanging("PROB_ID");
                    _PROB_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PROB_ID");
                    OnPROB_IDChanged();
                }
            }
        }
        private global::System.Int32 _PROB_ID;
        partial void OnPROB_IDChanging(global::System.Int32 value);
        partial void OnPROB_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProblemDescription
        {
            get
            {
                return _ProblemDescription;
            }
            set
            {
                if (_ProblemDescription != value)
                {
                    OnProblemDescriptionChanging(value);
                    ReportPropertyChanging("ProblemDescription");
                    _ProblemDescription = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProblemDescription");
                    OnProblemDescriptionChanged();
                }
            }
        }
        private global::System.String _ProblemDescription;
        partial void OnProblemDescriptionChanging(global::System.String value);
        partial void OnProblemDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SOL_ID
        {
            get
            {
                return _SOL_ID;
            }
            set
            {
                if (_SOL_ID != value)
                {
                    OnSOL_IDChanging(value);
                    ReportPropertyChanging("SOL_ID");
                    _SOL_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SOL_ID");
                    OnSOL_IDChanged();
                }
            }
        }
        private global::System.Int32 _SOL_ID;
        partial void OnSOL_IDChanging(global::System.Int32 value);
        partial void OnSOL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SolutionDescription
        {
            get
            {
                return _SolutionDescription;
            }
            set
            {
                if (_SolutionDescription != value)
                {
                    OnSolutionDescriptionChanging(value);
                    ReportPropertyChanging("SolutionDescription");
                    _SolutionDescription = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SolutionDescription");
                    OnSolutionDescriptionChanged();
                }
            }
        }
        private global::System.String _SolutionDescription;
        partial void OnSolutionDescriptionChanging(global::System.String value);
        partial void OnSolutionDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    OnPriorityChanging(value);
                    ReportPropertyChanging("Priority");
                    _Priority = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Priority");
                    OnPriorityChanged();
                }
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SolvedOnCreate
        {
            get
            {
                return _SolvedOnCreate;
            }
            set
            {
                if (_SolvedOnCreate != value)
                {
                    OnSolvedOnCreateChanging(value);
                    ReportPropertyChanging("SolvedOnCreate");
                    _SolvedOnCreate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SolvedOnCreate");
                    OnSolvedOnCreateChanged();
                }
            }
        }
        private global::System.Boolean _SolvedOnCreate;
        partial void OnSolvedOnCreateChanging(global::System.Boolean value);
        partial void OnSolvedOnCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeSurname
        {
            get
            {
                return _EmployeeSurname;
            }
            set
            {
                if (_EmployeeSurname != value)
                {
                    OnEmployeeSurnameChanging(value);
                    ReportPropertyChanging("EmployeeSurname");
                    _EmployeeSurname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmployeeSurname");
                    OnEmployeeSurnameChanged();
                }
            }
        }
        private global::System.String _EmployeeSurname;
        partial void OnEmployeeSurnameChanging(global::System.String value);
        partial void OnEmployeeSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientSurname
        {
            get
            {
                return _ClientSurname;
            }
            set
            {
                if (_ClientSurname != value)
                {
                    OnClientSurnameChanging(value);
                    ReportPropertyChanging("ClientSurname");
                    _ClientSurname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClientSurname");
                    OnClientSurnameChanged();
                }
            }
        }
        private global::System.String _ClientSurname;
        partial void OnClientSurnameChanging(global::System.String value);
        partial void OnClientSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientUsername
        {
            get
            {
                return _ClientUsername;
            }
            set
            {
                if (_ClientUsername != value)
                {
                    OnClientUsernameChanging(value);
                    ReportPropertyChanging("ClientUsername");
                    _ClientUsername = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClientUsername");
                    OnClientUsernameChanged();
                }
            }
        }
        private global::System.String _ClientUsername;
        partial void OnClientUsernameChanging(global::System.String value);
        partial void OnClientUsernameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vEmployee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vEmployee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vEmployee object.
        /// </summary>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static vEmployee CreatevEmployee(global::System.Int32 eMP_ID, global::System.String name, global::System.String surname, global::System.DateTime dateCreated, global::System.Guid userId, global::System.String userName)
        {
            vEmployee vEmployee = new vEmployee();
            vEmployee.EMP_ID = eMP_ID;
            vEmployee.Name = name;
            vEmployee.Surname = surname;
            vEmployee.DateCreated = dateCreated;
            vEmployee.UserId = userId;
            vEmployee.UserName = userName;
            return vEmployee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                if (_EMP_ID != value)
                {
                    OnEMP_IDChanging(value);
                    ReportPropertyChanging("EMP_ID");
                    _EMP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EMP_ID");
                    OnEMP_IDChanged();
                }
            }
        }
        private global::System.Int32 _EMP_ID;
        partial void OnEMP_IDChanging(global::System.Int32 value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                if (_Surname != value)
                {
                    OnSurnameChanging(value);
                    ReportPropertyChanging("Surname");
                    _Surname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Surname");
                    OnSurnameChanged();
                }
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cell
        {
            get
            {
                return _Cell;
            }
            set
            {
                OnCellChanging(value);
                ReportPropertyChanging("Cell");
                _Cell = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cell");
                OnCellChanged();
            }
        }
        private global::System.String _Cell;
        partial void OnCellChanging(global::System.String value);
        partial void OnCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                if (_DateCreated != value)
                {
                    OnDateCreatedChanging(value);
                    ReportPropertyChanging("DateCreated");
                    _DateCreated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateCreated");
                    OnDateCreatedChanged();
                }
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
    }

    #endregion
    
}
